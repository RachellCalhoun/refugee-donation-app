/*!
 * Start Bootstrap - New Age v3.3.7 (http://startbootstrap.com/template-overviews/new-age)
 * Copyright 2013-2017 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap/blob/gh-pages/LICENSE)
 */
angular.module("refugeeapp",["ngRoute"]); //creating module
angular.module("refugeeapp") //calling module
    .config(function($routeProvider, $locationProvider){
        $locationProvider.hashPrefix("");
        $routeProvider.when("/register", {
            templateUrl:"/static/templates/register.html",
            controller:"userController"
        })
        $routeProvider.when("/donations", {
            templateUrl:"/static/templates/donate_list.html",
            controller:"donateController",
            auth:"auth"
        })
        $routeProvider.when("/requests", {
            templateUrl:"/static/templates/request_list.html",
            controller:"requestController",
            auth:"auth"
        })
        $routeProvider.when("/request/edit/new", {
            templateUrl:"/static/templates/request_edit.html",
            controller:"requestController",
            auth:"auth"
        })
        $routeProvider.when("/landing", {
            templateUrl:"/static/templates/landing.html",
            controller:"userController"
        })

        $routeProvider.when("/welcome", {
            templateUrl:"/static/templates/welcome.html",
        })
        $routeProvider.when("/donate/:donateId", {
            templateUrl:"/static/templates/donate_detail.html",
            controller:"donateDetailController",
        })
        $routeProvider.when("/donate/edit/new", {
            templateUrl:"/static/templates/donate_edit.html",
            controller:"donateEditController",
        })
        $routeProvider.when("/myinterests", {
            templateUrl:"/static/templates/myinterests.html",
            controller:"myinterestsController",
        })
        $routeProvider.when("/myrequests", {
            templateUrl:"/static/templates/myrequests.html",
            controller:"myrequestsController",
        })
        $routeProvider.when("/letmehelp", {
            templateUrl:"/static/templates/letMeHelp.html",
            controller:"letMeHelpController",
        })
        $routeProvider.when("/mydonations", {
            templateUrl:"/static/templates/mydonations.html",
            controller:"mydonationsController",
        })
        $routeProvider.otherwise({
            redirectTo:"/landing"
        })
    })
    .run(function(sessionSvc, $rootScope, $location){
        sessionSvc.init();
        $rootScope.$on("$routeChangeStart", function(event, next){
            if (next.auth && !sessionSvc.isLoggedIn()){
                event.preventDefault();
                alert("You are not logged in.");
                $location.path("/login");
            }
        })
    })
    .controller("mainController", function($scope, sessionSvc, $location){
        $scope.isLoggedIn = sessionSvc.isLoggedIn();
        $scope.$on("SESSION_STATE_CHANGED", function(){
            $scope.isLoggedIn = sessionSvc.isLoggedIn();
        })
        $scope.logout = function(){
            sessionSvc.set(null);
            $location.path("/")
            apiSvc.post("user/logout").then(function(response){

                console.log(response);
            }, function(response){
                console.log(response)
            })
        }
    })
    // .controller("peopleController", function($scope){
    //     $scope.people = [];
    //     $scope.person = {};
    //     $scope.add = function(person){
    //         $scope.people.push(angular.copy(person));
    //         $scope.person = {}
    //     };

    // })



angular.module("refugeeapp")
    .controller("userController", function($scope, apiSvc, sessionSvc, $location){
        $scope.user = {};
        $scope.add = function(user){
            if(user.password !== user.confirmpassword){
                alert("Your passwords don't match");
                return;
            }
           apiSvc.post("user", user).then(function(){
                $location.path("/landing");
            })

        };
        $scope.login = function(user) {
            apiSvc.post("user/login", user).then(function(response){
                sessionSvc.set(response.data);
                $location.path("/welcome")
            }, function(response){
                console.log(response);
            });
            // http://hostname/api/user/login
        }
        $scope.logout = function() {
            sessionSvc.set(null);
            apiSvc.post("user/logout").then(function(response){
                console.log(response);
            }, function(response){
                console.log(response)
            })
        }
    })

angular.module("refugeeapp")
    .factory("sessionSvc", function($window, $rootScope){
        var sessionObject = null;
        function init(){
            sessionObject = JSON.parse($window.sessionStorage.getItem("sessionObject"));
        }
        function isLoggedIn(){
            return !!sessionObject;
        }
        function getUser(){
            return sessionObject;
        }
        function set(obj){
            if (obj){
                sessionObject = obj;
                $window.sessionStorage.setItem("sessionObject", JSON.stringify(sessionObject));
            }
            else{
                sessionObject = null;
                $window.sessionStorage.removeItem("sessionObject");
            }
            $rootScope.$broadcast("SESSION_STATE_CHANGED");

        }
        return {
            init:init,
            isLoggedIn:isLoggedIn,
            set:set,
            getUser:getUser,
        }
    })

angular.module("refugeeapp")
    .controller("requestController", function ($scope, apiSvc, sessionSvc, $location) {
        $scope.requests = [];
        $scope.request = {};
        $scope.fields = {};
        $scope.user = sessionSvc.getUser();
        $scope.add = function (request) {
            // $scope.donations.push(angular.copy(request));
            // $scope.request = {}
            request.location = JSON.stringify(request.location);
            apiSvc.post("request", request).then(function (d) {
                $location.path("/request")
            })

        };
        function list() {
            apiSvc.get("requestmatch", { "interested": $scope.user.userId }).then(function(response){
                var myhelps = response.data.objects.map(function (r){
                    return r.request.id;
                })
                apiSvc.get("request").then(function (response) {
                    $scope.requests = response.data.objects.filter(function (r) {
                        if (r.location.indexOf("lat") > -1) {
                            r.location = JSON.parse(r.location);
                            r.mapUrl = "http://maps.google.com/maps?q=loc:" + r.location.lat + "," + r.location.lng;
                        }
                        else {
                            r.mapUrl = "http://maps.google.com/maps?q=" + r.location;
                        }
                        return myhelps.indexOf(r.id) == -1;
                    });

                });
            });
        }
        list();
        function init() {
            apiSvc.getSchema("request").then(function (fields) {
                $scope.fields = fields;

            });
            apiSvc.get("category").then(function (response) {
                $scope.categories = response.data.objects;
            });

        }
        init();
        $scope.getSubCategories = function (category) {
            $scope.request.category = category.resource_uri;
            apiSvc.get("subcategory", { category: category.id }).then(function (response) {
                $scope.subcategories = response.data.objects;
            });
        };
        $scope.remove = function (request) {
            apiSvc.remove("request", request.id).then(function (response) {
                list();
            });
        };
        $scope.interested = function(request){
            apiSvc.post("requestmatch", { request:request.resource_uri }).then(function(response){
                list();
            });
        };
    });


angular.module("refugeeapp")
.controller("myrequestsController", function ($scope, apiSvc, sessionSvc) {
    $scope.requests = [];
    $scope.user = sessionSvc.getUser();
    function list(){
        apiSvc.get("request", { "author": $scope.user.userId }).then(function(response){
            $scope.requests = response.data.objects;
        });
    }
    list();
    $scope.remove = function(request){
        apiSvc.remove("request", request.id).then(function(response){
            list();
        });
    };
 })

angular.module("refugeeapp")
    .controller("myinterestsController", function ($scope, apiSvc, sessionSvc) {
        $scope.matches = [];
        var user = sessionSvc.getUser();
        function list(){
            apiSvc.get("donationmatch", { "interested": user.userId }).then(function(response){
                $scope.matches = response.data.objects;
            });
        }
        list();
        $scope.remove = function(dm){
            apiSvc.remove("donationmatch", dm.id).then(function(response){
                list();
            });
        };
        $scope.getStatus = function(dm) {
            if (dm.approve_contact) {
                return dm.donate.author.email;
            } else {
                return "pending";
            }
        }
     })
 
angular.module("refugeeapp")
.controller("mydonationsController", function ($scope, apiSvc, sessionSvc) {
    $scope.donations = [];
    $scope.user = sessionSvc.getUser();
    function list(){
        apiSvc.get("donate", { "author": $scope.user.userId }).then(function(response){
            $scope.donations = response.data.objects;
        });
    }
    list();
    $scope.remove = function(donate){
        apiSvc.remove("donate", donate.id).then(function(response){
            list();
        });
    };
    
 })

angular.module("refugeeapp")
.directive("map", function(){
    return{
        restrict:"E",
        templateUrl:"/static/templates/map.html",
        transclude:true,
        scope:{
            location:"=",
            editable: "="
        },
        link: function($scope, elem, attributes){
            var initpos = { lat: -34.397, lng: 150.644 };
            if ($scope.location) {
                initpos = $scope.location
            }
            var map = new google.maps.Map(elem.children(0).children(0)[0], {
            center: initpos,
            zoom: 10, 
            draggable: !!$scope.editable
            });
            function setCenter(position){
                map.setCenter(position);
                $scope.location = position;
            }
            $scope.locate=function(){
                navigator.geolocation.getCurrentPosition(function(pos){
                    setCenter({lat:pos.coords.latitude, lng:pos.coords.longitude})
                }, function(error){
                    console.log(error)
                },{
                    enableHighAccuracy:true,
                    timeout:5000,
                    maximumAge:0,
                })
            }
            if ($scope.editable) {
                // Create the search box and link it to the UI element.
                var input = document.getElementById('pac-input');
                var searchBox = new google.maps.places.SearchBox(input);
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                searchBox.addListener('places_changed', function() {
                var places = searchBox.getPlaces();

                if (places.length == 0) {
                    return;
                }

                places.forEach(function(place) {
                    if (!place.geometry) {
                    console.log("Returned place contains no geometry");
                    return;
                    }
                    setCenter(place.geometry.location)

                });
                });
            }; 
        }

    }
})

angular.module("refugeeapp")
.controller("letMeHelpController", function ($scope, apiSvc, sessionSvc) {
    $scope.requestmatches = [];
    var user = sessionSvc.getUser();
    function list(){
        apiSvc.get("requestmatch", { "interested": user.userId }).then(function(response){
            $scope.requestmatches = response.data.objects;
        });
    }
    list();
    $scope.remove = function(rm){
        apiSvc.remove("requestmatch", rm.id).then(function(response){
            list();
        });
    };
    $scope.getStatus = function(rm) {
        if (rm.approve_contact) {
            return rm.request.author.email;
        } else {
            return "pending";
        }
    }
 })

angular.module("refugeeapp")
.directive("lastRequests", function(apiSvc){
    return{
        restrict:"E",
        templateUrl:"/static/templates/lastRequests.html",
        link: function($scope, attributes){
            apiSvc.get("request").then(function(response){
                $scope.requests = response.data.objects;
            });
        }

    }
})
angular.module("refugeeapp")
.directive("lastDonations", function(apiSvc){
    return{
        restrict:"E",
        templateUrl:"/static/templates/lastDonations.html",
        link: function($scope, attributes){
            apiSvc.get("donate").then(function(response){
                $scope.donations = response.data.objects;
            });
        }

    }
})

angular.module("refugeeapp")
.directive("interestedIn", function(apiSvc){
    return{
        restrict:"E",
        templateUrl:"/static/templates/interestedDirective.html",
        link: function($scope, $el, attrs){
            $scope.donatematches = [];
            function list() {
                apiSvc.get("donationmatch", { "donate": attrs.donateId }).then(function(response){
                    $scope.donatematches = response.data.objects;
                });
            };
            $scope.approve = function(dm) {
                apiSvc.put("donationmatch/" + dm.id, { donate:dm.donate.resource_uri, interested:dm.interested.resource_uri, approve_contact:true }).then(function(response){
                    list();
                });
            }
            $scope.disapprove = function(dm) {
                apiSvc.put("donationmatch/" + dm.id, { donate:dm.donate.resource_uri, interested:dm.interested.resource_uri, approve_contact:false }).then(function(response){
                    list();
                });
            }
            list();
        }

    }
})

angular.module("refugeeapp")
.directive("volunteerHelp", function(apiSvc){
    return{
        restrict:"E",
        templateUrl:"/static/templates/helpDirective.html",
        link: function($scope, $el, attrs){
            $scope.requestmatches = [];
            function list() {
                apiSvc.get("requestmatch", { "request": attrs.requestId }).then(function(response){
                    $scope.requestmatches = response.data.objects;
                });
            };
            $scope.approve = function(rm) {
                apiSvc.put("requestmatch/" + rm.id, { request:rm.request.resource_uri, interested:rm.interested.resource_uri, approve_contact:true }).then(function(response){
                    list();
                });
            }
            $scope.disapprove = function(rm) {
                apiSvc.put("requestmatch/" + rm.id, { request:rm.request.resource_uri, interested:rm.interested.resource_uri, approve_contact:false }).then(function(response){
                    list();
                });
            }
            list();
        }

    }
})

angular.module("refugeeapp").directive('fileModel', ['$parse', function ($parse) {
    return {
        restrict: 'A',
        link: function(scope, element, attrs) {
            var model = $parse(attrs.fileModel);
            var modelSetter = model.assign;

            element.bind('change', function(){
                scope.$apply(function(){
                    modelSetter(scope, element[0].files[0]);
                });
            });
        }
    };
}]);

angular.module("refugeeapp")
    .controller("donateEditController", function($scope, apiSvc, $location){
        $scope.donate = {};
        $scope.fields = {};
        $scope.add = function(donate){
            // $scope.donations.push(angular.copy(donate));
            // $scope.donate = {}
            var fd = new FormData();
            for(var key in donate){
                if (donate.hasOwnProperty(key)){
                    if (key === "location"){
                        fd.append(key, JSON.stringify(donate[key]))
                    }
                    else {
                        fd.append(key, donate[key])
                    }

                }
            }
           apiSvc.multipartpost("donate", fd).then(function(d){
                $location.path("/donate")
            })

        };
        function init() {
            apiSvc.getSchema("donate").then(function(fields){
                $scope.fields = fields;
                $scope.donate.condition = $scope.fields.condition.default;

            });
            apiSvc.get("category").then(function(response){
                $scope.categories = response.data.objects;
            });

        }
        init();
        $scope.getSubCategories = function(category){
            $scope.donate.category = category.resource_uri;
            apiSvc.get("subcategory",{category:category.id}).then(function(response){
                $scope.subcategories = response.data.objects;
            });
        };
        //todo:needthis? check permissions
        $scope.remove = function(donate){
            apiSvc.remove("donate", donate.id).then(function(response){
                list();
            });
        };

    });


angular.module("refugeeapp")
    .controller("donateDetailController", function($scope, apiSvc, $routeParams){
        $scope.donate = {};

        function list(){
            apiSvc.get("donate/"+$routeParams.donateId).then(function(response){
                console.log(response);
                var data = response.data;
                if (data.location) {
                    data.location = JSON.parse(data.location)
                }
                $scope.donate = data;
            });
        }
        list();

    });


angular.module("refugeeapp")
    .controller("donateController", function($scope, apiSvc, sessionSvc){
        $scope.donations = [];
        $scope.user = sessionSvc.getUser();
        function list(){
            apiSvc.get("donationmatch", { "interested": $scope.user.userId }).then(function(response){
                var myinterests = response.data.objects.map(function (d){
                    return d.donate.id;
                })
                apiSvc.get("donate").then(function(response){
                    $scope.donations = response.data.objects.filter(function (d) {
                        return myinterests.indexOf(d.id) == -1;
                    });
                });
            });
        }
        list();
        $scope.remove = function(donate){
            apiSvc.remove("donate", donate.id).then(function(response){
                list();
            });
        };
        $scope.interested = function(donate){
            apiSvc.post("donationmatch", { donate:donate.resource_uri }).then(function(response){
                list();
            });
        };
    });


angular.module("refugeeapp")
    .factory("apiSvc", function($http){
        function get(resourceName, params){
            var queryString = "";
            for (var k in params){
                if (params.hasOwnProperty(k)){
                    queryString += "&" + k + "=" + params[k]
                }
            }
            return $http.get("/api/v1/"+resourceName+"/?format=json" + queryString)
        }
        function getSchema(resourceName){
            return $http.get("/api/v1/"+resourceName+"/schema/?format=json").then(function(response){
                var fields = {}
                var schema  = response.data;
                for(var k in schema.fields){
                    if (schema.fields.hasOwnProperty(k)){
                        if (schema.fields[k].choices) {
                            fields[k] = {
                                choices: schema.fields[k].choices.map(function (item){
                                    return item[0];
                                }),
                                default: schema.fields[k].default
                            };
                        }
                    }
                }
                return fields;
            })
        }
        function post(resourceName, data){
            return  $http.post("/api/v1/"+resourceName+"/?format=json", data)
        }
        function put(resourceName, data){
            return  $http.put("/api/v1/"+resourceName+"/?format=json", data)
        }
        function multipartpost(resourceName, data){
            return $http({
                        url: "/api/v1/"+resourceName+"/?format=json",
                        data: data,
                        method: 'POST',
                        transformRequest: angular.identity,
                        headers : {'Content-Type': undefined}
                    })
        }
        function remove(resourceName, resourceId){
            return $http.delete("/api/v1/" +  resourceName+"/"+ resourceId + "/?format=json")
        }
        return {
            get:get,
            getSchema:getSchema,
            post:post,
            put:put,
            remove:remove,
            multipartpost: multipartpost,
        }
    })
