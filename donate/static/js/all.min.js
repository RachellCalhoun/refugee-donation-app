/*!
 * Start Bootstrap - New Age v3.3.7 (http://startbootstrap.com/template-overviews/new-age)
 * Copyright 2013-2017 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap/blob/gh-pages/LICENSE)
 */
angular.module("refugeeapp",["ngRoute"]); //creating module
angular.module("refugeeapp") //calling module
    .config(function($routeProvider, $locationProvider){
        $locationProvider.hashPrefix("");
        $routeProvider.when("/register", {
            templateUrl:"/static/templates/register.html",
            controller:"userController"
        })
        $routeProvider.when("/donate", {
            templateUrl:"/static/templates/donate.html",
            controller:"donateController",
            auth:"auth"
        })
        $routeProvider.when("/request", {
            templateUrl:"/static/templates/requests.html",
            controller:"requestController",
            auth:"auth"
        })
        $routeProvider.when("/landing", {
            templateUrl:"/static/templates/landing.html",
            controller:"userController"
        })

        $routeProvider.when("/welcome", {
            templateUrl:"/static/templates/welcome.html",
        })
        $routeProvider.otherwise({
            redirectTo:"/landing"
        })
    })
    .run(function(sessionSvc, $rootScope, $location){
        sessionSvc.init();
        $rootScope.$on("$routeChangeStart", function(event, next){
            if (next.auth && !sessionSvc.isLoggedIn()){
                event.preventDefault();
                alert("You are not logged in.");
                $location.path("/login");
            }
        })
    })
    .controller("mainController", function($scope, sessionSvc, $location){
        $scope.isLoggedIn = sessionSvc.isLoggedIn();
        $scope.$on("SESSION_STATE_CHANGED", function(){
            $scope.isLoggedIn = sessionSvc.isLoggedIn();
        })
        $scope.logout = function(){
            sessionSvc.set(null);
            $location.path("/")
            apiSvc.post("user/logout").then(function(response){

                console.log(response);
            }, function(response){
                console.log(response)
            })
        }
    })
    // .controller("peopleController", function($scope){
    //     $scope.people = [];
    //     $scope.person = {};
    //     $scope.add = function(person){
    //         $scope.people.push(angular.copy(person));
    //         $scope.person = {}
    //     };

    // })



angular.module("refugeeapp")
    .controller("userController", function($scope, apiSvc, sessionSvc, $location){
        $scope.user = {};
        $scope.add = function(user){
            if(user.password !== user.confirmpassword){
                alert("Your passwords don't match");
                return;
            }
           apiSvc.post("user", user).then(function(){
                $location.path("/landing");
            })

        };
        $scope.login = function(user) {
            apiSvc.post("user/login", user).then(function(response){
                sessionSvc.set(response);
                $location.path("/welcome")
            }, function(response){
                console.log(response);
            });
            // http://hostname/api/user/login
        }
        $scope.logout = function() {
            sessionSvc.set(null);
            apiSvc.post("user/logout").then(function(response){
                console.log(response);
            }, function(response){
                console.log(response)
            })
        }
    })

angular.module("refugeeapp")
    .factory("sessionSvc", function($window, $rootScope){
        var sessionObject = null;
        function init(){
            sessionObject = $window.sessionStorage.getItem("sessionObject")
        }
        function isLoggedIn(){
            return sessionObject;
        }
        function set(obj){
            if (obj){
            sessionObject = JSON.stringify(obj);
            $window.sessionStorage.setItem("sessionObject", sessionObject)
            }
            else{
                sessionObject = null;
                $window.sessionStorage.removeItem("sessionObject");
            }
            $rootScope.$broadcast("SESSION_STATE_CHANGED");

        }
        return {
            init:init,
            isLoggedIn:isLoggedIn,
            set:set,
        }
    })

angular.module("refugeeapp")
    .controller("requestController", function($scope, apiSvc){
        $scope.requests = [];
        $scope.request = {};
        $scope.fields = {};
        $scope.add = function(request){
            // $scope.donations.push(angular.copy(request));
            // $scope.request = {}
           apiSvc.post("request", request).then(function(d){
                list()
            })

        };
        function list(){
            apiSvc.get("request").then(function(response){
                $scope.requests = response.data.objects;
            });
        }
        list();
        function init() {
            apiSvc.getSchema("request").then(function(fields){
                $scope.fields = fields;

            });
            apiSvc.get("category").then(function(response){
                $scope.categories = response.data.objects;
            });

        }
        init();
        $scope.getSubCategories = function(category){
            apiSvc.get("subcategory",{category:category.id}).then(function(response){
                $scope.subcategories = response.data.objects;
            });
        };
        $scope.remove = function(request){
            apiSvc.remove("request", request.id).then(function(response){
                list();
            });
        };
    });


angular.module("refugeeapp")
.directive("lastRequests", function(apiSvc){
    return{
        restrict:"E",
        templateUrl:"/static/templates/lastRequests.html",
        link: function($scope, attributes){
            apiSvc.get("request").then(function(response){
                $scope.requests = response.data.objects;
            });
        }

    }
})
angular.module("refugeeapp")
.directive("lastDonations", function(apiSvc){
    return{
        restrict:"E",
        templateUrl:"/static/templates/lastDonations.html",
        link: function($scope, attributes){
            apiSvc.get("donate").then(function(response){
                $scope.donations = response.data.objects;
            });
        }

    }
})

angular.module("refugeeapp").directive('fileModel', ['$parse', function ($parse) {
    return {
        restrict: 'A',
        link: function(scope, element, attrs) {
            var model = $parse(attrs.fileModel);
            var modelSetter = model.assign;

            element.bind('change', function(){
                scope.$apply(function(){
                    modelSetter(scope, element[0].files[0]);
                });
            });
        }
    };
}]);

angular.module("refugeeapp")
    .controller("donateController", function($scope, apiSvc){
        $scope.donations = [];
        $scope.donate = {};
        $scope.fields = {};
        $scope.add = function(donate){
            // $scope.donations.push(angular.copy(donate));
            // $scope.donate = {}
            var fd = new FormData();
            for(var key in donate){
                if (donate.hasOwnProperty(key)){
                    fd.append(key, donate[key])
                }
            }
           apiSvc.multipartpost("donate", fd).then(function(d){
                list()
            })

        };
        function list(){
            apiSvc.get("donate").then(function(response){
                $scope.donations = response.data.objects;
            });
        }
        list();
        function init() {
            apiSvc.getSchema("donate").then(function(fields){
                $scope.fields = fields;
                $scope.donate.condition = $scope.fields.condition.default;

            });
            apiSvc.get("category").then(function(response){
                $scope.categories = response.data.objects;
            });

        }
        init();
        $scope.getSubCategories = function(category){
            apiSvc.get("subcategory",{category:category.id}).then(function(response){
                $scope.subcategories = response.data.objects;
            });
        };
        $scope.remove = function(donate){
            apiSvc.remove("donate", donate.id).then(function(response){
                list();
            });
        };
    });


angular.module("refugeeapp")
    .factory("apiSvc", function($http){
        function get(resourceName, params){
            var queryString = "";
            for (var k in params){
                if (params.hasOwnProperty(k)){
                    queryString += "&" + k + "=" + params[k]
                }
            }
            return $http.get("/api/v1/"+resourceName+"/?format=json" + queryString)
        }
        function getSchema(resourceName){
            return $http.get("/api/v1/"+resourceName+"/schema/?format=json").then(function(response){
                var fields = {}
                var schema  = response.data;
                for(var k in schema.fields){
                    if (schema.fields.hasOwnProperty(k)){
                        if (schema.fields[k].choices) {
                            fields[k] = {
                                choices: schema.fields[k].choices.map(function (item){
                                    return item[0];
                                }),
                                default: schema.fields[k].default
                            };
                        }
                    }
                }
                return fields;
            })
        }
        function post(resourceName, data){
            return  $http.post("/api/v1/"+resourceName+"/?format=json", data)
        }
        function multipartpost(resourceName, data){
            return $http({
                        url: "/api/v1/"+resourceName+"/?format=json",
                        data: data,
                        method: 'POST',
                        transformRequest: angular.identity,
                        headers : {'Content-Type': undefined}
                    })
        }
        function remove(resourceName, resourceId){
            return $http.delete("/api/v1/" +  resourceName+"/"+ resourceId + "/?format=json")
        }
        return {
            get:get,
            getSchema:getSchema,
            post:post,
            remove:remove,
            multipartpost: multipartpost,
        }
    })
